// 상속의 진정한 의미 : 재사용성
// <특성>
// 1. 단일 상속 (계층적 상속은 가능함)
// 2. extends (확장) cf. C#은 , 쓴다.
// 3. interface는 다중 상속 가능!

// 상속 구현의 Point : 자원들의 공통 분모 뽑는 연습하기!

// 문제상황. class가 여러 개 있는 경우
// 1. 클래스 간의 관계를 파악한다. => 상속 or 포함
//		... is a ~ : ...은 ~이다. => 상속
//		... has a ~ : ...은 ~을 가지고 있다. => 포함
//		ex1. 원(구체화된 자원)은 도형(추상자원)이다. => 상속
//		ex2. 원은 점이다? (X)
// 		ex3. 원은 점을 가지고 있다. => 포함

public class Ex0113_Inherit {

}
